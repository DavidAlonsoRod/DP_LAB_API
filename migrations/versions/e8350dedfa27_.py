"""empty message

Revision ID: e8350dedfa27
Revises: 61323b41ad8a
Create Date: 2024-10-23 17:37:05.217220

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e8350dedfa27'
down_revision = '61323b41ad8a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('role', sa.String(length=120), nullable=True),
    sa.Column('username', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('is_paying_customer', sa.Boolean(), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('billing_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('company', sa.String(length=120), nullable=True),
    sa.Column('address_1', sa.String(length=255), nullable=True),
    sa.Column('address_2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('state', sa.String(length=120), nullable=True),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=3), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meta_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=120), nullable=True),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shipping_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=True),
    sa.Column('last_name', sa.String(length=120), nullable=True),
    sa.Column('company', sa.String(length=120), nullable=True),
    sa.Column('address_1', sa.String(length=255), nullable=True),
    sa.Column('address_2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('state', sa.String(length=120), nullable=True),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=3), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('customer_id',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'customer', ['customer_id'], ['id'])
        batch_op.drop_column('date_created')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('is_paying_customer',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.Boolean(),
               nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_constraint('user_billing_key', type_='unique')
        batch_op.drop_constraint('user_first_name_key', type_='unique')
        batch_op.drop_constraint('user_is_paying_customer_key', type_='unique')
        batch_op.drop_constraint('user_last_name_key', type_='unique')
        batch_op.drop_constraint('user_role_key', type_='unique')
        batch_op.drop_constraint('user_shipping_key', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_unique_constraint('user_shipping_key', ['shipping'])
        batch_op.create_unique_constraint('user_role_key', ['role'])
        batch_op.create_unique_constraint('user_last_name_key', ['last_name'])
        batch_op.create_unique_constraint('user_is_paying_customer_key', ['is_paying_customer'])
        batch_op.create_unique_constraint('user_first_name_key', ['first_name'])
        batch_op.create_unique_constraint('user_billing_key', ['billing'])
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_paying_customer',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(length=120),
               nullable=False)

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_created', sa.VARCHAR(length=80), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('customer_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=80),
               existing_nullable=False)

    op.drop_table('shipping_address')
    op.drop_table('meta_data')
    op.drop_table('billing_address')
    op.drop_table('customer')
    # ### end Alembic commands ###
